# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    
    - name: Create .env file
      run: |
        echo "DATABASE_USERNAME=$DOCKER_USERNAME" >> .env
        echo "DATABASE_PASSWORD=$DOCKER_DATABASE_PASSWORD" >> .env
        echo "DATABASE_URL=$DOCKER_DATABASE" >> .env
        echo "JWT_COOKIE_EXPIRES_IN=$DOCKER_JWT_COOKIE_EXPIRES_IN" >> .env
        echo "JWT_EXPIRES_IN=$DOCKER_JWT_EXPIRES_IN" >> .env
        echo "JWT_SECRET=$DOCKER_JWT_SECRET" >> .env
        echo "PORT=$DOCKER_PORT" >> .env  

    - name: Docker build App
      run:  docker-compose up -d --build
    - name: Docker Login
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        DOCKER_DATABASE: ${{secrets.DOCKER_DATABASE}}
        DOCKER_DATABASE_PASSWORD: ${{secrets.DOCKER_DATABASE_PASSWORD}}
        DOCKER_JWT_COOKIE_EXPIRES_IN: ${{secrets.DOCKER_JWT_COOKIE_EXPIRES_IN}}
        DOCKER_JWT_EXPIRES_IN: ${{secrets.DOCKER_JWT_EXPIRES_IN}}
        DOCKER_JWT_SECRET: ${{secrets.DOCKER_JWT_SECRET}}
        DOCKER_PORT: ${{secrets.DOCKER_PORT}}
        

      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - name: Docker Push
      run: |
        docker tag projects-app_project-app tawandalloyd/cd
        docker push tawandalloyd/cd 